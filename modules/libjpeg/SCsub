#!/usr/bin/env python
from misc.utility.scons_hints import *

Import("env")
Import("env_modules")

env_libjpeg = env_modules.Clone()

# Thirdparty source files

thirdparty_obj = []

# Not unbundled for now as they are not commonly available as shared library
thirdparty_dir = "#thirdparty/libjpeg/"
thirdparty_sources = [
    "jaricom.c",
    "jcomapi.c",
    "jdapimin.c",
    "jdapistd.c",
    "jdarith.c",
    "jdatadst.c",
    "jdatasrc.c",
    "jdcoefct.c",
    "jdcolor.c",
    "jddctmgr.c",
    "jdhuff.c",
    "jdinput.c",
    "jdmainct.c",
    "jdmarker.c",
    "jdmaster.c",
    "jdmerge.c",
    "jdpostct.c",
    "jdsample.c",
    "jerror.c",
    "jidctflt.c",
    "jidctfst.c",
    "jidctint.c",
    "jmemansi.c",
    "jmemmgr.c",
    "jquant1.c",
    "jquant2.c",
    "jutils.c",
]
thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]

env_libjpeg.Prepend(CPPPATH=[thirdparty_dir])

env_thirdparty = env_libjpeg.Clone()
env_thirdparty.disable_warnings()
env_thirdparty.add_source_files(thirdparty_obj, thirdparty_sources)
env.modules_sources += thirdparty_obj

# Godot source files

module_obj = []

env_libjpeg.add_source_files(module_obj, "*.cpp")
env.modules_sources += module_obj

# Needed to force rebuilding the module files when the thirdparty library is updated.
env.Depends(module_obj, thirdparty_obj)
