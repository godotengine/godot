<?xml version="1.0" encoding="UTF-8" ?>
<class name="VisionOSXRInterface" inherits="XRInterface" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../doc/class.xsd">
	<brief_description>
		visionOS XR implementation for rendering in immersive mode.
	</brief_description>
	<description>
		This is a visionOS XR implementation for rendering in immersive mode. It uses the Compositor Services framework to render an Immersive scene. It supports the full and mixed immersive modes mode.

		To use this module, you must set 'application/app_role' export setting to 'Immersive'. You can choose the immersion style using the 'application/immersion_style' export setting.

		You must use the Metal rendering driver, and only the Mobile renderer is supported for now.

		You can initialize this interface as follows:

		[codeblock]
		var interface = XRServer.find_interface("visionOS")
		if interface and interface.initialize():
			var viewport : Viewport = get_viewport()
			viewport.use_xr = true
			viewport.vrs_mode = Viewport.VRS_XR
		[/codeblock]
	</description>
	<tutorials>
	</tutorials>
	<members>
		<member name="xr_play_area_mode" type="int" setter="set_play_area_mode" getter="get_play_area_mode" overrides="XRInterface" enum="XRInterface.PlayAreaMode" default="3" />
	</members>
</class>
