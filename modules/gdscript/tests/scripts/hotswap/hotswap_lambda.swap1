var member1 := func():
	return "Member 1 Hotswap 1"

var member2 := func():
	return "Member 2 Hotswap 1"

var local1: Callable
var local2: Callable

var param1: Callable
var param2: Callable

var anon1: Callable
var anon2: Callable

func test():
	var _v1 = func(): return "Local 1 Hotswap 1"
	var _v2 = func(): return "Local 2 Hotswap 1"
	# Only set local2 here, local1 has already been set.
	local2 = _v2

	print(local1.call())
	print(local2.call())


	print(member1.call())
	if member2:
		print(member2.call())
	else:
		print(member2)

	test_parameters()

	print(param1.call())
	print(param2.call())

	# Only set anon2 here, anon1 has already been set.
	sink(func(): return "Anonymous 1 Hotswap 1")
	sink(func(): return "Anonymous 2 Hotswap 1")

	print(anon1.call())
	print(anon2.call())

func test_parameters(_v1 = func(): return "Param 1 Hotswap 1", _v2 = func(): return "Param 2 Hotswap 1"):
	# Only set param2 here, param1 has already been set.
	param2 = _v2

func sink(_v):
	pass
