:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/modules/limboai/doc_classes/BTStopAnimation.xml.

.. _class_BTStopAnimation:

BTStopAnimation
===============

**Inherits:** :ref:`BTAction<class_BTAction>` **<** :ref:`BTTask<class_BTTask>` **<** :ref:`BT<class_BT>`

BT action that stops the playback of an animation on the specified ``AnimationPlayer`` node.

.. rst-class:: classref-introduction-group

Description
-----------

BTStopAnimation action stops the playback of an animation on the specified ``AnimationPlayer`` node and returns ``SUCCESS``. If :ref:`animation_name<class_BTStopAnimation_property_animation_name>` is set, it will only stop the playback if the specified animation is currently playing.

Returns ``FAILURE`` if the action fails to get the ``AnimationPlayer`` node.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------------------------+--------------------------------------------------------------------------+-----------+
   | ``StringName``              | :ref:`animation_name<class_BTStopAnimation_property_animation_name>`     | ``&""``   |
   +-----------------------------+--------------------------------------------------------------------------+-----------+
   | :ref:`BBNode<class_BBNode>` | :ref:`animation_player<class_BTStopAnimation_property_animation_player>` |           |
   +-----------------------------+--------------------------------------------------------------------------+-----------+
   | ``bool``                    | :ref:`keep_state<class_BTStopAnimation_property_keep_state>`             | ``false`` |
   +-----------------------------+--------------------------------------------------------------------------+-----------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_BTStopAnimation_property_animation_name:

.. rst-class:: classref-property

``StringName`` **animation_name** = ``&""`` :ref:`ðŸ”—<class_BTStopAnimation_property_animation_name>`

.. rst-class:: classref-property-setget

- |void| **set_animation_name**\ (\ value\: ``StringName``\ )
- ``StringName`` **get_animation_name**\ (\ )

Animation's key within the ``AnimationPlayer`` node. If not empty, BTStopAnimation will only stop the playback if the specified animation is currently playing.

.. rst-class:: classref-item-separator

----

.. _class_BTStopAnimation_property_animation_player:

.. rst-class:: classref-property

:ref:`BBNode<class_BBNode>` **animation_player** :ref:`ðŸ”—<class_BTStopAnimation_property_animation_player>`

.. rst-class:: classref-property-setget

- |void| **set_animation_player**\ (\ value\: :ref:`BBNode<class_BBNode>`\ )
- :ref:`BBNode<class_BBNode>` **get_animation_player**\ (\ )

Parameter that specifies the ``AnimationPlayer`` node.

.. rst-class:: classref-item-separator

----

.. _class_BTStopAnimation_property_keep_state:

.. rst-class:: classref-property

``bool`` **keep_state** = ``false`` :ref:`ðŸ”—<class_BTStopAnimation_property_keep_state>`

.. rst-class:: classref-property-setget

- |void| **set_keep_state**\ (\ value\: ``bool``\ )
- ``bool`` **get_keep_state**\ (\ )

If ``true``, the animation state is not updated visually.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
