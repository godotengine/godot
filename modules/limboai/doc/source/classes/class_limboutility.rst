:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/modules/limboai/doc_classes/LimboUtility.xml.

.. _class_LimboUtility:

LimboUtility
============

**Inherits:** 

Helper functions for LimboAI.

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +---------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``String``    | :ref:`decorate_output_var<class_LimboUtility_method_decorate_output_var>`\ (\ variable\: ``String``\ ) |const|                                                           |
   +---------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``String``    | :ref:`decorate_var<class_LimboUtility_method_decorate_var>`\ (\ variable\: ``String``\ ) |const|                                                                         |
   +---------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``String``    | :ref:`get_check_operator_string<class_LimboUtility_method_get_check_operator_string>`\ (\ check\: :ref:`CheckType<enum_LimboUtility_CheckType>`\ ) |const|               |
   +---------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``String``    | :ref:`get_operation_string<class_LimboUtility_method_get_operation_string>`\ (\ operation\: :ref:`Operation<enum_LimboUtility_Operation>`\ ) |const|                     |
   +---------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``String``    | :ref:`get_status_name<class_LimboUtility_method_get_status_name>`\ (\ status\: ``int``\ ) |const|                                                                        |
   +---------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Texture2D`` | :ref:`get_task_icon<class_LimboUtility_method_get_task_icon>`\ (\ class_or_script_path\: ``String``\ ) |const|                                                           |
   +---------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``      | :ref:`perform_check<class_LimboUtility_method_perform_check>`\ (\ check\: :ref:`CheckType<enum_LimboUtility_CheckType>`, a\: ``Variant``, b\: ``Variant``\ )             |
   +---------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Variant``   | :ref:`perform_operation<class_LimboUtility_method_perform_operation>`\ (\ operation\: :ref:`Operation<enum_LimboUtility_Operation>`, a\: ``Variant``, b\: ``Variant``\ ) |
   +---------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_LimboUtility_CheckType:

.. rst-class:: classref-enumeration

enum **CheckType**: :ref:`ðŸ”—<enum_LimboUtility_CheckType>`

.. _class_LimboUtility_constant_CHECK_EQUAL:

.. rst-class:: classref-enumeration-constant

:ref:`CheckType<enum_LimboUtility_CheckType>` **CHECK_EQUAL** = ``0``

Equality Check.

.. _class_LimboUtility_constant_CHECK_LESS_THAN:

.. rst-class:: classref-enumeration-constant

:ref:`CheckType<enum_LimboUtility_CheckType>` **CHECK_LESS_THAN** = ``1``

Less Than Check.

.. _class_LimboUtility_constant_CHECK_LESS_THAN_OR_EQUAL:

.. rst-class:: classref-enumeration-constant

:ref:`CheckType<enum_LimboUtility_CheckType>` **CHECK_LESS_THAN_OR_EQUAL** = ``2``

Less Than or Equal To Check.

.. _class_LimboUtility_constant_CHECK_GREATER_THAN:

.. rst-class:: classref-enumeration-constant

:ref:`CheckType<enum_LimboUtility_CheckType>` **CHECK_GREATER_THAN** = ``3``

Greater Than Check.

.. _class_LimboUtility_constant_CHECK_GREATER_THAN_OR_EQUAL:

.. rst-class:: classref-enumeration-constant

:ref:`CheckType<enum_LimboUtility_CheckType>` **CHECK_GREATER_THAN_OR_EQUAL** = ``4``

Greater Than or Equal To Check

.. _class_LimboUtility_constant_CHECK_NOT_EQUAL:

.. rst-class:: classref-enumeration-constant

:ref:`CheckType<enum_LimboUtility_CheckType>` **CHECK_NOT_EQUAL** = ``5``

Inequality Check.

.. rst-class:: classref-item-separator

----

.. _enum_LimboUtility_Operation:

.. rst-class:: classref-enumeration

enum **Operation**: :ref:`ðŸ”—<enum_LimboUtility_Operation>`

.. _class_LimboUtility_constant_OPERATION_NONE:

.. rst-class:: classref-enumeration-constant

:ref:`Operation<enum_LimboUtility_Operation>` **OPERATION_NONE** = ``0``

No operation.

.. _class_LimboUtility_constant_OPERATION_ADDITION:

.. rst-class:: classref-enumeration-constant

:ref:`Operation<enum_LimboUtility_Operation>` **OPERATION_ADDITION** = ``1``

Arithmetic addition.

.. _class_LimboUtility_constant_OPERATION_SUBTRACTION:

.. rst-class:: classref-enumeration-constant

:ref:`Operation<enum_LimboUtility_Operation>` **OPERATION_SUBTRACTION** = ``2``

Arithmetic subtraction.

.. _class_LimboUtility_constant_OPERATION_MULTIPLICATION:

.. rst-class:: classref-enumeration-constant

:ref:`Operation<enum_LimboUtility_Operation>` **OPERATION_MULTIPLICATION** = ``3``

Arithmetic multiplication.

.. _class_LimboUtility_constant_OPERATION_DIVISION:

.. rst-class:: classref-enumeration-constant

:ref:`Operation<enum_LimboUtility_Operation>` **OPERATION_DIVISION** = ``4``

Arithmetic division.

.. _class_LimboUtility_constant_OPERATION_MODULO:

.. rst-class:: classref-enumeration-constant

:ref:`Operation<enum_LimboUtility_Operation>` **OPERATION_MODULO** = ``5``

Produces the remainder of an integer division.

.. _class_LimboUtility_constant_OPERATION_POWER:

.. rst-class:: classref-enumeration-constant

:ref:`Operation<enum_LimboUtility_Operation>` **OPERATION_POWER** = ``6``

Multiply ``a`` by itself ``b`` times.

.. _class_LimboUtility_constant_OPERATION_BIT_SHIFT_LEFT:

.. rst-class:: classref-enumeration-constant

:ref:`Operation<enum_LimboUtility_Operation>` **OPERATION_BIT_SHIFT_LEFT** = ``7``

Bitwise left shift.

.. _class_LimboUtility_constant_OPERATION_BIT_SHIFT_RIGHT:

.. rst-class:: classref-enumeration-constant

:ref:`Operation<enum_LimboUtility_Operation>` **OPERATION_BIT_SHIFT_RIGHT** = ``8``

Bitwise right shift.

.. _class_LimboUtility_constant_OPERATION_BIT_AND:

.. rst-class:: classref-enumeration-constant

:ref:`Operation<enum_LimboUtility_Operation>` **OPERATION_BIT_AND** = ``9``

Bitwise AND.

.. _class_LimboUtility_constant_OPERATION_BIT_OR:

.. rst-class:: classref-enumeration-constant

:ref:`Operation<enum_LimboUtility_Operation>` **OPERATION_BIT_OR** = ``10``

Bitwise OR.

.. _class_LimboUtility_constant_OPERATION_BIT_XOR:

.. rst-class:: classref-enumeration-constant

:ref:`Operation<enum_LimboUtility_Operation>` **OPERATION_BIT_XOR** = ``11``

Bitwise XOR.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_LimboUtility_method_decorate_output_var:

.. rst-class:: classref-method

``String`` **decorate_output_var**\ (\ variable\: ``String``\ ) |const| :ref:`ðŸ”—<class_LimboUtility_method_decorate_output_var>`

Just like :ref:`decorate_var<class_LimboUtility_method_decorate_var>`, produces a string with a :ref:`Blackboard<class_Blackboard>` variable name that is formatted for display, and also adds an additional symbol to indicate that the variable is used as an output.

.. rst-class:: classref-item-separator

----

.. _class_LimboUtility_method_decorate_var:

.. rst-class:: classref-method

``String`` **decorate_var**\ (\ variable\: ``String``\ ) |const| :ref:`ðŸ”—<class_LimboUtility_method_decorate_var>`

Produces a string with a :ref:`Blackboard<class_Blackboard>` variable name that is formatted for display or console output.

.. rst-class:: classref-item-separator

----

.. _class_LimboUtility_method_get_check_operator_string:

.. rst-class:: classref-method

``String`` **get_check_operator_string**\ (\ check\: :ref:`CheckType<enum_LimboUtility_CheckType>`\ ) |const| :ref:`ðŸ”—<class_LimboUtility_method_get_check_operator_string>`

Returns an operator string for a :ref:`CheckType<enum_LimboUtility_CheckType>` enum value. For example, :ref:`CHECK_EQUAL<class_LimboUtility_constant_CHECK_EQUAL>` returns "==".

.. rst-class:: classref-item-separator

----

.. _class_LimboUtility_method_get_operation_string:

.. rst-class:: classref-method

``String`` **get_operation_string**\ (\ operation\: :ref:`Operation<enum_LimboUtility_Operation>`\ ) |const| :ref:`ðŸ”—<class_LimboUtility_method_get_operation_string>`

Returns a string representation of an :ref:`Operation<enum_LimboUtility_Operation>` enum value.

.. rst-class:: classref-item-separator

----

.. _class_LimboUtility_method_get_status_name:

.. rst-class:: classref-method

``String`` **get_status_name**\ (\ status\: ``int``\ ) |const| :ref:`ðŸ”—<class_LimboUtility_method_get_status_name>`

Returns a name of a :ref:`BTTask<class_BTTask>` status code.

.. rst-class:: classref-item-separator

----

.. _class_LimboUtility_method_get_task_icon:

.. rst-class:: classref-method

``Texture2D`` **get_task_icon**\ (\ class_or_script_path\: ``String``\ ) |const| :ref:`ðŸ”—<class_LimboUtility_method_get_task_icon>`

Returns the icon texture associated with a task based on its class name or script resource path.

.. rst-class:: classref-item-separator

----

.. _class_LimboUtility_method_perform_check:

.. rst-class:: classref-method

``bool`` **perform_check**\ (\ check\: :ref:`CheckType<enum_LimboUtility_CheckType>`, a\: ``Variant``, b\: ``Variant``\ ) :ref:`ðŸ”—<class_LimboUtility_method_perform_check>`

Performs a ``check`` on two values, ``a`` and ``b``, and returns ``true`` if the check passes.

.. rst-class:: classref-item-separator

----

.. _class_LimboUtility_method_perform_operation:

.. rst-class:: classref-method

``Variant`` **perform_operation**\ (\ operation\: :ref:`Operation<enum_LimboUtility_Operation>`, a\: ``Variant``, b\: ``Variant``\ ) :ref:`ðŸ”—<class_LimboUtility_method_perform_operation>`

Performs an ``operation`` on two values, ``a`` and ``b``, and returns the result.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
