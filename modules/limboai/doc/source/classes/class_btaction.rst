:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/modules/limboai/doc_classes/BTAction.xml.

.. _class_BTAction:

BTAction
========

**Inherits:** :ref:`BTTask<class_BTTask>` **<** :ref:`BT<class_BT>`

**Inherited By:** :ref:`BTAwaitAnimation<class_BTAwaitAnimation>`, :ref:`BTCallMethod<class_BTCallMethod>`, :ref:`BTConsolePrint<class_BTConsolePrint>`, :ref:`BTEvaluateExpression<class_BTEvaluateExpression>`, :ref:`BTFail<class_BTFail>`, :ref:`BTPauseAnimation<class_BTPauseAnimation>`, :ref:`BTPlayAnimation<class_BTPlayAnimation>`, :ref:`BTRandomWait<class_BTRandomWait>`, :ref:`BTSetAgentProperty<class_BTSetAgentProperty>`, :ref:`BTSetVar<class_BTSetVar>`, :ref:`BTStopAnimation<class_BTStopAnimation>`, :ref:`BTWait<class_BTWait>`, :ref:`BTWaitTicks<class_BTWaitTicks>`

Base class for all :ref:`BehaviorTree<class_BehaviorTree>` actions.

.. rst-class:: classref-introduction-group

Description
-----------

Base class for all actions within a :ref:`BehaviorTree<class_BehaviorTree>`. You can create your own actions by extending the **BTAction** class.

Represents a specific behavior or action in a :ref:`BehaviorTree<class_BehaviorTree>` that an agent should execute. Actions are the lowest level of the :ref:`BehaviorTree<class_BehaviorTree>` hierarchy and are responsible for performing the actual work required to achieve a goal. Actions do not have child tasks.

A single action can perform a task within one or multiple ticks. If it takes more than one tick to complete the task, the action should return ``RUNNING`` status. When the task is finished, the action returns either ``SUCCESS`` or ``FAILURE`` to indicate the outcome.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
