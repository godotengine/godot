:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/modules/limboai/doc_classes/BTConsolePrint.xml.

.. _class_BTConsolePrint:

BTConsolePrint
==============

**Inherits:** :ref:`BTAction<class_BTAction>` **<** :ref:`BTTask<class_BTTask>` **<** :ref:`BT<class_BT>`

BT action task that outputs text to the console.

.. rst-class:: classref-introduction-group

Description
-----------

BTConsolePrint action outputs text to the console and returns ``SUCCESS``. It can include placeholders for format arguments similar to GDScript's % operator.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------------------+---------------------------------------------------------------------------------+-------------------------+
   | ``PackedStringArray`` | :ref:`bb_format_parameters<class_BTConsolePrint_property_bb_format_parameters>` | ``PackedStringArray()`` |
   +-----------------------+---------------------------------------------------------------------------------+-------------------------+
   | ``String``            | :ref:`text<class_BTConsolePrint_property_text>`                                 | ``""``                  |
   +-----------------------+---------------------------------------------------------------------------------+-------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_BTConsolePrint_property_bb_format_parameters:

.. rst-class:: classref-property

``PackedStringArray`` **bb_format_parameters** = ``PackedStringArray()`` :ref:`ðŸ”—<class_BTConsolePrint_property_bb_format_parameters>`

.. rst-class:: classref-property-setget

- |void| **set_bb_format_parameters**\ (\ value\: ``PackedStringArray``\ )
- ``PackedStringArray`` **get_bb_format_parameters**\ (\ )

The values of format parameters are used as format arguments for the text that will be printed.

**Note:** The returned array is *copied* and any changes to it will not update the original property value. See ``PackedStringArray`` for more details.

.. rst-class:: classref-item-separator

----

.. _class_BTConsolePrint_property_text:

.. rst-class:: classref-property

``String`` **text** = ``""`` :ref:`ðŸ”—<class_BTConsolePrint_property_text>`

.. rst-class:: classref-property-setget

- |void| **set_text**\ (\ value\: ``String``\ )
- ``String`` **get_text**\ (\ )

The text to be printed, which can include multiple placeholders to be substituted with format arguments. These placeholders follow the same format as GDScript's % operator and typically start with '%' followed by a format specifier. For instance: %s for string, %d for integer, %f for real.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
