:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/modules/limboai/doc_classes/BTTimeLimit.xml.

.. _class_BTTimeLimit:

BTTimeLimit
===========

**Inherits:** :ref:`BTDecorator<class_BTDecorator>` **<** :ref:`BTTask<class_BTTask>` **<** :ref:`BT<class_BT>`

BT decorator that sets a time limit for its child's execution.

.. rst-class:: classref-introduction-group

Description
-----------

BTTimeLimit allocates a limited time for the child's execution and aborts it, returning ``FAILURE`` if the :ref:`time_limit<class_BTTimeLimit_property_time_limit>` is exceeded.

Returns ``FAILURE`` if the :ref:`time_limit<class_BTTimeLimit_property_time_limit>` is exceeded; otherwise, it returns the status of the child task.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------+----------------------------------------------------------+---------+
   | ``float`` | :ref:`time_limit<class_BTTimeLimit_property_time_limit>` | ``5.0`` |
   +-----------+----------------------------------------------------------+---------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_BTTimeLimit_property_time_limit:

.. rst-class:: classref-property

``float`` **time_limit** = ``5.0`` :ref:`ðŸ”—<class_BTTimeLimit_property_time_limit>`

.. rst-class:: classref-property-setget

- |void| **set_time_limit**\ (\ value\: ``float``\ )
- ``float`` **get_time_limit**\ (\ )

Time allocated for the child task's execution.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
