<?xml version="1.0" encoding="UTF-8" ?>
<class name="AnimationNodeStateMachineTransition" inherits="Resource" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		A transition within an [AnimationNodeStateMachine] connecting two [AnimationRootNode]s.
	</brief_description>
	<description>
		The path generated when using [method AnimationNodeStateMachinePlayback.travel] is limited to the nodes connected by [AnimationNodeStateMachineTransition].
		You can set the timing and conditions of the transition in detail.
	</description>
	<tutorials>
		<link title="Using AnimationTree">$DOCS_URL/tutorials/animation/animation_tree.html</link>
	</tutorials>
	<members>
		<member name="advance_condition" type="StringName" setter="set_advance_condition" getter="get_advance_condition" default="&amp;&quot;&quot;">
			Turn on auto advance when this condition is set. The provided name will become a boolean parameter on the [AnimationTree] that can be controlled from code (see [url=$DOCS_URL/tutorials/animation/animation_tree.html#controlling-from-code]Using AnimationTree[/url]). For example, if [member AnimationTree.tree_root] is an [AnimationNodeStateMachine] and [member advance_condition] is set to [code]"idle"[/code]:
			[codeblocks]
			[gdscript]
			$animation_tree.set("parameters/conditions/idle", is_on_floor and (linear_velocity.x == 0))
			[/gdscript]
			[csharp]
			GetNode&lt;AnimationTree&gt;("animation_tree").Set("parameters/conditions/idle", IsOnFloor &amp;&amp; (LinearVelocity.X == 0));
			[/csharp]
			[/codeblocks]
		</member>
		<member name="advance_expression" type="String" setter="set_advance_expression" getter="get_advance_expression" default="&quot;&quot;">
			Use an expression as a condition for state machine transitions. It is possible to create complex animation advance conditions for switching between states and gives much greater flexibility for creating complex state machines by directly interfacing with the script code.
		</member>
		<member name="advance_mode" type="int" setter="set_advance_mode" getter="get_advance_mode" enum="AnimationNodeStateMachineTransition.AdvanceMode" default="1">
			Determines whether the transition should disabled, enabled when using [method AnimationNodeStateMachinePlayback.travel], or traversed automatically if the [member advance_condition] and [member advance_expression] checks are true (if assigned).
		</member>
		<member name="break_loop_at_end" type="bool" setter="set_break_loop_at_end" getter="is_loop_broken_at_end" default="false">
			If [code]true[/code], breaks the loop at the end of the loop cycle for transition, even if the animation is looping.
		</member>
		<member name="priority" type="int" setter="set_priority" getter="get_priority" default="1">
			Lower priority transitions are preferred when travelling through the tree via [method AnimationNodeStateMachinePlayback.travel] or [member advance_mode] is set to [constant ADVANCE_MODE_AUTO].
		</member>
		<member name="reset" type="bool" setter="set_reset" getter="is_reset" default="true">
			If [code]true[/code], the destination animation is played back from the beginning when switched.
		</member>
		<member name="switch_mode" type="int" setter="set_switch_mode" getter="get_switch_mode" enum="AnimationNodeStateMachineTransition.SwitchMode" default="0">
			The transition type.
		</member>
		<member name="xfade_curve" type="Curve" setter="set_xfade_curve" getter="get_xfade_curve">
			Ease curve for better control over cross-fade between this state and the next.
		</member>
		<member name="xfade_time" type="float" setter="set_xfade_time" getter="get_xfade_time" default="0.0">
			The time to cross-fade between this state and the next.
			[b]Note:[/b] [AnimationNodeStateMachine] transitions the current state immediately after the start of the fading. The precise remaining time can only be inferred from the main animation. When [AnimationNodeOutput] is considered as the most upstream, so the [member xfade_time] is not scaled depending on the downstream delta. See also [member AnimationNodeOneShot.fadeout_time].
		</member>
	</members>
	<signals>
		<signal name="advance_condition_changed">
			<description>
				Emitted when [member advance_condition] is changed.
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="SWITCH_MODE_IMMEDIATE" value="0" enum="SwitchMode">
			Switch to the next state immediately. The current state will end and blend into the beginning of the new one.
		</constant>
		<constant name="SWITCH_MODE_SYNC" value="1" enum="SwitchMode">
			Switch to the next state immediately, but will seek the new state to the playback position of the old state.
		</constant>
		<constant name="SWITCH_MODE_AT_END" value="2" enum="SwitchMode">
			Wait for the current state playback to end, then switch to the beginning of the next state animation.
		</constant>
		<constant name="ADVANCE_MODE_DISABLED" value="0" enum="AdvanceMode">
			Don't use this transition.
		</constant>
		<constant name="ADVANCE_MODE_ENABLED" value="1" enum="AdvanceMode">
			Only use this transition during [method AnimationNodeStateMachinePlayback.travel].
		</constant>
		<constant name="ADVANCE_MODE_AUTO" value="2" enum="AdvanceMode">
			Automatically use this transition if the [member advance_condition] and [member advance_expression] checks are true (if assigned).
		</constant>
	</constants>
</class>
