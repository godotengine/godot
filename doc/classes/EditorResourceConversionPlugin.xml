<?xml version="1.0" encoding="UTF-8" ?>
<class name="EditorResourceConversionPlugin" inherits="RefCounted" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Plugin for adding custom converters from one resource format to another in the editor resource picker context menu; for example, converting a [StandardMaterial3D] to a [ShaderMaterial].
	</brief_description>
	<description>
		[EditorResourceConversionPlugin] is invoked when the context menu is brought up for a resource in the editor inspector. Relevant conversion plugins will appear as menu options to convert the given resource to a target type.
		Below shows an example of a basic plugin that will convert an [ImageTexture] to a [PortableCompressedTexture2D].
		[codeblocks]
		[gdscript]
		extends EditorResourceConversionPlugin

		func _handles(resource: Resource):
		    return resource is ImageTexture

		func _converts_to():
		    return "PortableCompressedTexture2D"

		func _convert(itex: Resource):
		    var ptex = PortableCompressedTexture2D.new()
		    ptex.create_from_image(itex.get_image(), PortableCompressedTexture2D.COMPRESSION_MODE_LOSSLESS)
		    return ptex
		[/gdscript]
		[/codeblocks]
		To use an [EditorResourceConversionPlugin], register it using the [method EditorPlugin.add_resource_conversion_plugin] method first.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_convert" qualifiers="virtual const">
			<return type="Resource" />
			<param index="0" name="resource" type="Resource" />
			<description>
				Takes an input [Resource] and converts it to the type given in [method _converts_to]. The returned [Resource] is the result of the conversion, and the input [Resource] remains unchanged.
				Returns [code]null[/code] if the plugin only supports asynchrnous conversions using [method _convert_async].
			</description>
		</method>
		<method name="_convert_async" qualifiers="virtual const">
			<return type="bool" />
			<param index="0" name="resource" type="Resource" />
			<param index="1" name="on_complete" type="Callable" />
			<description>
				Takes an input [Resource] and asynchronously converts it to the type given in [method _converts_to]. When the conversion is complete, [code]on_complete[/code] is called with the resulting [Resource].
				Returns [code]null[/code] if the plugin only supports normal conversions using [method _convert].
			</description>
		</method>
		<method name="_converts_to" qualifiers="virtual const">
			<return type="String" />
			<description>
				Returns the class name of the target type of [Resource] that this plugin converts source resources to.
			</description>
		</method>
		<method name="_handles" qualifiers="virtual const">
			<return type="bool" />
			<param index="0" name="resource" type="Resource" />
			<description>
				Called to determine whether a particular [Resource] can be converted to the target resource type by this plugin.
			</description>
		</method>
	</methods>
</class>
