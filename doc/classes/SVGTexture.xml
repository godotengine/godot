<?xml version="1.0" encoding="UTF-8" ?>
<class name="SVGTexture" inherits="Texture2D" experimental="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		A scalable [Texture2D] based on an SVG image.
	</brief_description>
	<description>
		A scalable [Texture2D] based on an SVG image. [SVGTexture]s are automatically re-rasterized to match font oversampling.
		[b]Note:[/b] This class is only available in engine builds with the SVG module enabled. By default, the SVG module is enabled, but it can be disabled at build-time using the [code]module_svg_enabled=no[/code] SCons option.
		[b]Note:[/b] SVGs are rasterized using [url=https://www.thorvg.org/]ThorVG[/url] when importing them. [url=https://www.thorvg.org/about#:~:text=certain%20features%20remain%20unsupported%20within%20the%20current%20framework]Support is limited[/url]; complex vectors may not render correctly. [url=$DOCS_URL/tutorials/assets_pipeline/importing_images.html#doc-importing-images-svg-text]Text must be converted to paths[/url]; otherwise, it won't appear in the rasterized image. You can check whether ThorVG can render a certain vector correctly using its [url=https://www.thorvg.org/viewer]web-based viewer[/url]. For complex vectors, rendering them to PNGs using [url=https://inkscape.org/]Inkscape[/url] is often a better solution. This can be automated thanks to its [url=https://wiki.inkscape.org/wiki/index.php/Using_the_Command_Line#Export_files]command-line interface[/url].
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="create_from_string" qualifiers="static">
			<return type="SVGTexture" />
			<param index="0" name="source" type="String" />
			<param index="1" name="scale" type="float" default="1.0" />
			<param index="2" name="saturation" type="float" default="1.0" />
			<param index="3" name="color_map" type="Dictionary" default="{}" />
			<description>
				Creates a new [SVGTexture] and initializes it by allocating and setting the SVG data from string.
			</description>
		</method>
		<method name="get_scaled_rid" qualifiers="const">
			<return type="RID" />
			<description>
				Returns the [RID] of the texture rasterized to match the oversampling of the currently drawn canvas item.
			</description>
		</method>
		<method name="get_source" qualifiers="const">
			<return type="String" />
			<description>
				Returns SVG source code.
			</description>
		</method>
		<method name="set_size_override">
			<return type="void" />
			<param index="0" name="size" type="Vector2i" />
			<description>
				Resizes the texture to the specified dimensions.
			</description>
		</method>
		<method name="set_source">
			<return type="void" />
			<param index="0" name="source" type="String" />
			<description>
				Sets SVG source code.
			</description>
		</method>
	</methods>
	<members>
		<member name="base_scale" type="float" setter="set_base_scale" getter="get_base_scale" default="1.0">
			SVG texture scale. [code]1.0[/code] is the original SVG size. Higher values result in a larger image.
		</member>
		<member name="color_map" type="Dictionary" setter="set_color_map" getter="get_color_map" default="{}">
			If set, remaps SVG texture colors according to [Color]-[Color] map.
		</member>
		<member name="resource_local_to_scene" type="bool" setter="set_local_to_scene" getter="is_local_to_scene" overrides="Resource" default="false" />
		<member name="saturation" type="float" setter="set_saturation" getter="get_saturation" default="1.0">
			Overrides texture saturation.
		</member>
	</members>
</class>
