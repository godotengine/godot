<?xml version="1.0" encoding="UTF-8" ?>
<class name="NavigationMeshSourceGeometryData3D" inherits="Resource" is_experimental="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Container for parsed source geometry data used in navigation mesh baking.
	</brief_description>
	<description>
		Container for parsed source geometry data used in navigation mesh baking.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="add_faces">
			<return type="void" />
			<param index="0" name="faces" type="PackedVector3Array" />
			<param index="1" name="xform" type="Transform3D" />
			<description>
				Adds an array of vertex positions to the geometry data for navigation mesh baking to form triangulated faces. For each face the array must have three vertex positions in clockwise winding order. Since [NavigationMesh] resources have no transform, all vertex positions need to be offset by the node's transform using [param xform].
			</description>
		</method>
		<method name="add_mesh">
			<return type="void" />
			<param index="0" name="mesh" type="Mesh" />
			<param index="1" name="xform" type="Transform3D" />
			<description>
				Adds the geometry data of a [Mesh] resource to the navigation mesh baking data. The mesh must have valid triangulated mesh data to be considered. Since [NavigationMesh] resources have no transform, all vertex positions need to be offset by the node's transform using [param xform].
			</description>
		</method>
		<method name="add_mesh_array">
			<return type="void" />
			<param index="0" name="mesh_array" type="Array" />
			<param index="1" name="xform" type="Transform3D" />
			<description>
				Adds an [Array] the size of [constant Mesh.ARRAY_MAX] and with vertices at index [constant Mesh.ARRAY_VERTEX] and indices at index [constant Mesh.ARRAY_INDEX] to the navigation mesh baking data. The array must have valid triangulated mesh data to be considered. Since [NavigationMesh] resources have no transform, all vertex positions need to be offset by the node's transform using [param xform].
			</description>
		</method>
		<method name="clear">
			<return type="void" />
			<description>
				Clears the internal data.
			</description>
		</method>
		<method name="get_indices" qualifiers="const">
			<return type="PackedInt32Array" />
			<description>
				Returns the parsed source geometry data indices array.
			</description>
		</method>
		<method name="get_vertices" qualifiers="const">
			<return type="PackedFloat32Array" />
			<description>
				Returns the parsed source geometry data vertices array.
			</description>
		</method>
		<method name="has_data">
			<return type="bool" />
			<description>
				Returns [code]true[/code] when parsed source geometry data exists.
			</description>
		</method>
		<method name="set_indices">
			<return type="void" />
			<param index="0" name="indices" type="PackedInt32Array" />
			<description>
				Sets the parsed source geometry data indices. The indices need to be matched with appropriated vertices.
				[b]Warning:[/b] Inappropriate data can crash the baking process of the involved third-party libraries.
			</description>
		</method>
		<method name="set_vertices">
			<return type="void" />
			<param index="0" name="vertices" type="PackedFloat32Array" />
			<description>
				Sets the parsed source geometry data vertices. The vertices need to be matched with appropriated indices.
				[b]Warning:[/b] Inappropriate data can crash the baking process of the involved third-party libraries.
			</description>
		</method>
	</methods>
</class>
