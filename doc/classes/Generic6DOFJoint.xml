<?xml version="1.0" encoding="UTF-8" ?>
<class name="Generic6DOFJoint" inherits="Joint" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		The generic 6-degrees-of-freedom joint can implement a variety of joint types by locking certain axes' rotation or translation.
	</brief_description>
	<description>
		The first 3 DOF axes are linear axes, which represent translation of Bodies, and the latter 3 DOF axes represent the angular motion. Each axis can be either locked, or limited. The joint may also take on spring and motor characteristics, influencing its linear and angular movement.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_flag_x" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="flag" type="int" enum="Generic6DOFJoint.Flag" />
			<description>
				Returns the current state of the joint flag, on the X axis, represented by the given [enum Flag].
			</description>
		</method>
		<method name="get_flag_y" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="flag" type="int" enum="Generic6DOFJoint.Flag" />
			<description>
				Returns the current state of the joint flag, on the Y axis, represented by the given [enum Flag].
			</description>
		</method>
		<method name="get_flag_z" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="flag" type="int" enum="Generic6DOFJoint.Flag" />
			<description>
				Returns the current state of the joint flag, on the Z axis, represented by the given [enum Flag].
			</description>
		</method>
		<method name="get_param_x" qualifiers="const">
			<return type="float" />
			<argument index="0" name="param" type="int" enum="Generic6DOFJoint.Param" />
			<description>
				Returns the current state of the joint parameter, on the X axis, represented by the given [enum Param].
			</description>
		</method>
		<method name="get_param_y" qualifiers="const">
			<return type="float" />
			<argument index="0" name="param" type="int" enum="Generic6DOFJoint.Param" />
			<description>
				Returns the current state of the joint parameter, on the Y axis, represented by the given [enum Param].
			</description>
		</method>
		<method name="get_param_z" qualifiers="const">
			<return type="float" />
			<argument index="0" name="param" type="int" enum="Generic6DOFJoint.Param" />
			<description>
				Returns the current state of the joint parameter, on the Z axis, represented by the given [enum Param].
			</description>
		</method>
		<method name="set_flag_x">
			<return type="void" />
			<argument index="0" name="flag" type="int" enum="Generic6DOFJoint.Flag" />
			<argument index="1" name="value" type="bool" />
			<description>
				Sets the joint flag, on the X axis, represented by the given [enum Flag] with the given [code]value[/code].
			</description>
		</method>
		<method name="set_flag_y">
			<return type="void" />
			<argument index="0" name="flag" type="int" enum="Generic6DOFJoint.Flag" />
			<argument index="1" name="value" type="bool" />
			<description>
				Sets the joint flag, on the Y axis, represented by the given [enum Flag] with the given [code]value[/code].
			</description>
		</method>
		<method name="set_flag_z">
			<return type="void" />
			<argument index="0" name="flag" type="int" enum="Generic6DOFJoint.Flag" />
			<argument index="1" name="value" type="bool" />
			<description>
				Sets the joint flag, on the Z axis, represented by the given [enum Flag] with the given [code]value[/code].
			</description>
		</method>
		<method name="set_param_x">
			<return type="void" />
			<argument index="0" name="param" type="int" enum="Generic6DOFJoint.Param" />
			<argument index="1" name="value" type="float" />
			<description>
				Sets the joint parameter, on the X axis, represented by the given [enum Param] with the given [code]value[/code].
			</description>
		</method>
		<method name="set_param_y">
			<return type="void" />
			<argument index="0" name="param" type="int" enum="Generic6DOFJoint.Param" />
			<argument index="1" name="value" type="float" />
			<description>
				Sets the joint parameter, on the X axis, represented by the given [enum Param] with the given [code]value[/code].
			</description>
		</method>
		<method name="set_param_z">
			<return type="void" />
			<argument index="0" name="param" type="int" enum="Generic6DOFJoint.Param" />
			<argument index="1" name="value" type="float" />
			<description>
				Sets the joint parameter, on the X axis, represented by the given [enum Param] with the given [code]value[/code].
			</description>
		</method>
	</methods>
	<members>
		<member name="angular_limit_x/damping" type="float" setter="set_param_x" getter="get_param_x" default="1.0">
			The amount of rotational damping across the X axis.
			The lower, the longer an impulse from one side takes to travel to the other side.
		</member>
		<member name="angular_limit_x/enabled" type="bool" setter="set_flag_x" getter="get_flag_x" default="true">
			If [code]true[/code], rotation across the X axis is limited.
		</member>
		<member name="angular_limit_x/erp" type="float" setter="set_param_x" getter="get_param_x" default="0.5">
			When rotating across the X axis, this error tolerance factor defines how much the correction gets slowed down. The lower, the slower.
		</member>
		<member name="angular_limit_x/force_limit" type="float" setter="set_param_x" getter="get_param_x" default="0.0">
			The maximum amount of force that can occur, when rotating around the X axis.
		</member>
		<member name="angular_limit_x/lower_angle" type="float" setter="_set_angular_lo_limit_x" getter="_get_angular_lo_limit_x" default="0.0">
			The minimum rotation in negative direction to break loose and rotate around the X axis.
		</member>
		<member name="angular_limit_x/restitution" type="float" setter="set_param_x" getter="get_param_x" default="0.0">
			The amount of rotational restitution across the X axis. The lower, the more restitution occurs.
		</member>
		<member name="angular_limit_x/softness" type="float" setter="set_param_x" getter="get_param_x" default="0.5">
			The speed of all rotations across the X axis.
		</member>
		<member name="angular_limit_x/upper_angle" type="float" setter="_set_angular_hi_limit_x" getter="_get_angular_hi_limit_x" default="0.0">
			The minimum rotation in positive direction to break loose and rotate around the X axis.
		</member>
		<member name="angular_limit_y/damping" type="float" setter="set_param_y" getter="get_param_y" default="1.0">
			The amount of rotational damping across the Y axis. The lower, the more dampening occurs.
		</member>
		<member name="angular_limit_y/enabled" type="bool" setter="set_flag_y" getter="get_flag_y" default="true">
			If [code]true[/code], rotation across the Y axis is limited.
		</member>
		<member name="angular_limit_y/erp" type="float" setter="set_param_y" getter="get_param_y" default="0.5">
			When rotating across the Y axis, this error tolerance factor defines how much the correction gets slowed down. The lower, the slower.
		</member>
		<member name="angular_limit_y/force_limit" type="float" setter="set_param_y" getter="get_param_y" default="0.0">
			The maximum amount of force that can occur, when rotating around the Y axis.
		</member>
		<member name="angular_limit_y/lower_angle" type="float" setter="_set_angular_lo_limit_y" getter="_get_angular_lo_limit_y" default="0.0">
			The minimum rotation in negative direction to break loose and rotate around the Y axis.
		</member>
		<member name="angular_limit_y/restitution" type="float" setter="set_param_y" getter="get_param_y" default="0.0">
			The amount of rotational restitution across the Y axis. The lower, the more restitution occurs.
		</member>
		<member name="angular_limit_y/softness" type="float" setter="set_param_y" getter="get_param_y" default="0.5">
			The speed of all rotations across the Y axis.
		</member>
		<member name="angular_limit_y/upper_angle" type="float" setter="_set_angular_hi_limit_y" getter="_get_angular_hi_limit_y" default="0.0">
			The minimum rotation in positive direction to break loose and rotate around the Y axis.
		</member>
		<member name="angular_limit_z/damping" type="float" setter="set_param_z" getter="get_param_z" default="1.0">
			The amount of rotational damping across the Z axis. The lower, the more dampening occurs.
		</member>
		<member name="angular_limit_z/enabled" type="bool" setter="set_flag_z" getter="get_flag_z" default="true">
			If [code]true[/code], rotation across the Z axis is limited.
		</member>
		<member name="angular_limit_z/erp" type="float" setter="set_param_z" getter="get_param_z" default="0.5">
			When rotating across the Z axis, this error tolerance factor defines how much the correction gets slowed down. The lower, the slower.
		</member>
		<member name="angular_limit_z/force_limit" type="float" setter="set_param_z" getter="get_param_z" default="0.0">
			The maximum amount of force that can occur, when rotating around the Z axis.
		</member>
		<member name="angular_limit_z/lower_angle" type="float" setter="_set_angular_lo_limit_z" getter="_get_angular_lo_limit_z" default="0.0">
			The minimum rotation in negative direction to break loose and rotate around the Z axis.
		</member>
		<member name="angular_limit_z/restitution" type="float" setter="set_param_z" getter="get_param_z" default="0.0">
			The amount of rotational restitution across the Z axis. The lower, the more restitution occurs.
		</member>
		<member name="angular_limit_z/softness" type="float" setter="set_param_z" getter="get_param_z" default="0.5">
			The speed of all rotations across the Z axis.
		</member>
		<member name="angular_limit_z/upper_angle" type="float" setter="_set_angular_hi_limit_z" getter="_get_angular_hi_limit_z" default="0.0">
			The minimum rotation in positive direction to break loose and rotate around the Z axis.
		</member>
		<member name="angular_motor_x/enabled" type="bool" setter="set_flag_x" getter="get_flag_x" default="false">
			If [code]true[/code], a rotating motor at the X axis is enabled.
		</member>
		<member name="angular_motor_x/force_limit" type="float" setter="set_param_x" getter="get_param_x" default="300.0">
			Maximum acceleration for the motor at the X axis.
		</member>
		<member name="angular_motor_x/target_velocity" type="float" setter="set_param_x" getter="get_param_x" default="0.0">
			Target speed for the motor at the X axis.
		</member>
		<member name="angular_motor_y/enabled" type="bool" setter="set_flag_y" getter="get_flag_y" default="false">
			If [code]true[/code], a rotating motor at the Y axis is enabled.
		</member>
		<member name="angular_motor_y/force_limit" type="float" setter="set_param_y" getter="get_param_y" default="300.0">
			Maximum acceleration for the motor at the Y axis.
		</member>
		<member name="angular_motor_y/target_velocity" type="float" setter="set_param_y" getter="get_param_y" default="0.0">
			Target speed for the motor at the Y axis.
		</member>
		<member name="angular_motor_z/enabled" type="bool" setter="set_flag_z" getter="get_flag_z" default="false">
			If [code]true[/code], a rotating motor at the Z axis is enabled.
		</member>
		<member name="angular_motor_z/force_limit" type="float" setter="set_param_z" getter="get_param_z" default="300.0">
			Maximum acceleration for the motor at the Z axis.
		</member>
		<member name="angular_motor_z/target_velocity" type="float" setter="set_param_z" getter="get_param_z" default="0.0">
			Target speed for the motor at the Z axis.
		</member>
		<member name="angular_spring/quaternion_rotation_equilibrium" type="Quat" setter="set_quaternion_rotation_equilibrium" getter="get_quaternion_rotation_equilibrium">
			Optionally, the joint's rotation equilibrium maybe driven by using a quaternion instead. This is way faster than using Euler angles to drive joint rotation.
			Note that this property only works with [member ProjectSettings.physics/3d/physics_engine] set to [code]Bullet[/code].
		</member>
		<member name="angular_spring/use_global_rotation" type="bool" setter="set_use_global_rotation" getter="get_use_global_rotation" default="false">
			If [code]true[/code], the set angular spring [code]equilibrium_point[/code] will be interpreted as [b]global[/b] rotation values. Otherwise, they will be interpreted as local rotation values. This is useful for copying global rotations.
			[codeblock]
			var target_global_angles = get_node(puppeteer_node).global_transform.basis.get_rotation_quat().get_euler()
			self.set_param_x(PARAM_ANGULAR_SPRING_EQUILIBRIUM_POINT,target_global_angles.x)
			self.set_param_y(PARAM_ANGULAR_SPRING_EQUILIBRIUM_POINT,target_global_angles.y)
			self.set_param_z(PARAM_ANGULAR_SPRING_EQUILIBRIUM_POINT,target_global_angles.z)
			[/codeblock]
			Note that this property only works with [member ProjectSettings.physics/3d/physics_engine] set to [code]Bullet[/code].
		</member>
		<member name="angular_spring/use_quaternion_rotation_equilibrium" type="bool" setter="set_use_quaternion_rotation_equilibrium" getter="get_use_quaternion_rotation_equilibrium" default="false">
			If [code]true[/code], the set [member angular_spring/quaternion_rotation_equilibrium] will be used instead of Euler angles set through angular spring [code]equilibrium_point[/code]s. It is highly recomended to use this in favour of Euler angles as it is faster.
			Note that this property only works with [member ProjectSettings.physics/3d/physics_engine] set to [code]Bullet[/code].
		</member>
		<member name="angular_spring_x/damping" type="float" setter="set_param_x" getter="get_param_x" default="0.0">
			The dampening value for the angular spring characteristic around the X axis. This affects how much the angular spring joint oscillates before reaching its equilibrium angle. The higher the value the less oscillation. Please note that high damping values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</member>
		<member name="angular_spring_x/enabled" type="bool" setter="set_flag_x" getter="get_flag_x" default="false">
			If [code]true[/code], the angular spring property around the X axis is enabled.
		</member>
		<member name="angular_spring_x/equilibrium_point" type="float" setter="set_param_x" getter="get_param_x" default="0.0">
			The angle in radians the joint will try to maintain around the X axis relative to [member Joint.nodes/node_a].
		</member>
		<member name="angular_spring_x/stiffness" type="float" setter="set_param_x" getter="get_param_x" default="0.0">
			The stiffness value for the angular spring characteristic around the X axis. This affects how fast the angular spring joint will rotate to reach its set equilibrium angle. The higher the value the more force is applied to maintain the set equilibrium angle. Please note that high stiffness values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</member>
		<member name="angular_spring_y/damping" type="float" setter="set_param_y" getter="get_param_y" default="0.0">
			The dampening value for the angular spring characteristic around the Y axis. This affects how much the angular spring joint oscillates before reaching its equilibrium angle. The higher the value the less oscillation. Please note that high damping values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</member>
		<member name="angular_spring_y/enabled" type="bool" setter="set_flag_y" getter="get_flag_y" default="false">
			If [code]true[/code], the angular spring property around the Y axis is enabled.
		</member>
		<member name="angular_spring_y/equilibrium_point" type="float" setter="set_param_y" getter="get_param_y" default="0.0">
			The angle in radians the joint will try to maintain around the Y axis relative to [member Joint.nodes/node_a].
		</member>
		<member name="angular_spring_y/stiffness" type="float" setter="set_param_y" getter="get_param_y" default="0.0">
			The stiffness value for the angular spring characteristic around the Y axis. This affects how fast the angular spring joint will rotate to reach its set equilibrium angle. The higher the value the more force is applied to maintain the set equilibrium angle. Please note that high stiffness values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</member>
		<member name="angular_spring_z/damping" type="float" setter="set_param_z" getter="get_param_z" default="0.0">
			The dampening value for the angular spring characteristic around the Z axis. This affects how much the angular spring joint oscillates before reaching its equilibrium angle. The higher the value the less oscillation. Please note that high damping values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</member>
		<member name="angular_spring_z/enabled" type="bool" setter="set_flag_z" getter="get_flag_z" default="false">
			If [code]true[/code], the angular spring property around the Z axis is enabled.
		</member>
		<member name="angular_spring_z/equilibrium_point" type="float" setter="set_param_z" getter="get_param_z" default="0.0">
			The angle in radians the joint will try to maintain around the Z axis relative to [member Joint.nodes/node_a].
		</member>
		<member name="angular_spring_z/stiffness" type="float" setter="set_param_z" getter="get_param_z" default="0.0">
			The stiffness value for the angular spring characteristic around the Z axis. This affects how fast the angular spring joint will rotate to reach its set equilibrium angle. The higher the value the more force is applied to maintain the set equilibrium angle. Please note that high stiffness values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</member>
		<member name="linear_limit_x/damping" type="float" setter="set_param_x" getter="get_param_x" default="1.0">
			The amount of damping that happens at the X motion.
		</member>
		<member name="linear_limit_x/enabled" type="bool" setter="set_flag_x" getter="get_flag_x" default="true">
			If [code]true[/code], the linear motion across the X axis is limited.
		</member>
		<member name="linear_limit_x/lower_distance" type="float" setter="set_param_x" getter="get_param_x" default="0.0">
			The minimum difference between the pivot points' X axis.
		</member>
		<member name="linear_limit_x/restitution" type="float" setter="set_param_x" getter="get_param_x" default="0.5">
			The amount of restitution on the X axis movement. The lower, the more momentum gets lost.
		</member>
		<member name="linear_limit_x/softness" type="float" setter="set_param_x" getter="get_param_x" default="0.7">
			A factor applied to the movement across the X axis. The lower, the slower the movement.
		</member>
		<member name="linear_limit_x/upper_distance" type="float" setter="set_param_x" getter="get_param_x" default="0.0">
			The maximum difference between the pivot points' X axis.
		</member>
		<member name="linear_limit_y/damping" type="float" setter="set_param_y" getter="get_param_y" default="1.0">
			The amount of damping that happens at the Y motion.
		</member>
		<member name="linear_limit_y/enabled" type="bool" setter="set_flag_y" getter="get_flag_y" default="true">
			If [code]true[/code], the linear motion across the Y axis is limited.
		</member>
		<member name="linear_limit_y/lower_distance" type="float" setter="set_param_y" getter="get_param_y" default="0.0">
			The minimum difference between the pivot points' Y axis.
		</member>
		<member name="linear_limit_y/restitution" type="float" setter="set_param_y" getter="get_param_y" default="0.5">
			The amount of restitution on the Y axis movement. The lower, the more momentum gets lost.
		</member>
		<member name="linear_limit_y/softness" type="float" setter="set_param_y" getter="get_param_y" default="0.7">
			A factor applied to the movement across the Y axis. The lower, the slower the movement.
		</member>
		<member name="linear_limit_y/upper_distance" type="float" setter="set_param_y" getter="get_param_y" default="0.0">
			The maximum difference between the pivot points' Y axis.
		</member>
		<member name="linear_limit_z/damping" type="float" setter="set_param_z" getter="get_param_z" default="1.0">
			The amount of damping that happens at the Z motion.
		</member>
		<member name="linear_limit_z/enabled" type="bool" setter="set_flag_z" getter="get_flag_z" default="true">
			If [code]true[/code], the linear motion across the Z axis is limited.
		</member>
		<member name="linear_limit_z/lower_distance" type="float" setter="set_param_z" getter="get_param_z" default="0.0">
			The minimum difference between the pivot points' Z axis.
		</member>
		<member name="linear_limit_z/restitution" type="float" setter="set_param_z" getter="get_param_z" default="0.5">
			The amount of restitution on the Z axis movement. The lower, the more momentum gets lost.
		</member>
		<member name="linear_limit_z/softness" type="float" setter="set_param_z" getter="get_param_z" default="0.7">
			A factor applied to the movement across the Z axis. The lower, the slower the movement.
		</member>
		<member name="linear_limit_z/upper_distance" type="float" setter="set_param_z" getter="get_param_z" default="0.0">
			The maximum difference between the pivot points' Z axis.
		</member>
		<member name="linear_motor_x/enabled" type="bool" setter="set_flag_x" getter="get_flag_x" default="false">
			If [code]true[/code], then there is a linear motor on the X axis. It will attempt to reach the target velocity while staying within the force limits.
		</member>
		<member name="linear_motor_x/force_limit" type="float" setter="set_param_x" getter="get_param_x" default="0.0">
			The maximum force the linear motor can apply on the X axis while trying to reach the target velocity.
		</member>
		<member name="linear_motor_x/target_velocity" type="float" setter="set_param_x" getter="get_param_x" default="0.0">
			The speed that the linear motor will attempt to reach on the X axis.
		</member>
		<member name="linear_motor_y/enabled" type="bool" setter="set_flag_y" getter="get_flag_y" default="false">
			If [code]true[/code], then there is a linear motor on the Y axis. It will attempt to reach the target velocity while staying within the force limits.
		</member>
		<member name="linear_motor_y/force_limit" type="float" setter="set_param_y" getter="get_param_y" default="0.0">
			The maximum force the linear motor can apply on the Y axis while trying to reach the target velocity.
		</member>
		<member name="linear_motor_y/target_velocity" type="float" setter="set_param_y" getter="get_param_y" default="0.0">
			The speed that the linear motor will attempt to reach on the Y axis.
		</member>
		<member name="linear_motor_z/enabled" type="bool" setter="set_flag_z" getter="get_flag_z" default="false">
			If [code]true[/code], then there is a linear motor on the Z axis. It will attempt to reach the target velocity while staying within the force limits.
		</member>
		<member name="linear_motor_z/force_limit" type="float" setter="set_param_z" getter="get_param_z" default="0.0">
			The maximum force the linear motor can apply on the Z axis while trying to reach the target velocity.
		</member>
		<member name="linear_motor_z/target_velocity" type="float" setter="set_param_z" getter="get_param_z" default="0.0">
			The speed that the linear motor will attempt to reach on the Z axis.
		</member>
		<member name="linear_spring_x/damping" type="float" setter="set_param_x" getter="get_param_x" default="0.01">
			The dampening value for the linear spring characteristic at the X axis. This affects how much the linear spring joint oscillates before reaching its equilibrium point. The higher the value the less oscillation. Please note that high damping values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</member>
		<member name="linear_spring_x/enabled" type="bool" setter="set_flag_x" getter="get_flag_x" default="false">
			If [code]true[/code], the linear spring property on the X axis is enabled.
		</member>
		<member name="linear_spring_x/equilibrium_point" type="float" setter="set_param_x" getter="get_param_x" default="0.0">
			The position the joint will try to maintain on the X axis relative to [member Joint.nodes/node_a].
		</member>
		<member name="linear_spring_x/stiffness" type="float" setter="set_param_x" getter="get_param_x" default="0.01">
			The stiffness value for the linear spring characteristic on the X axis. This affects how fast the linear spring joint will move to reach its set equilibrium point. The higher the value the more force is applied to maintain the set equilibrium point. Please note that high stiffness values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</member>
		<member name="linear_spring_y/damping" type="float" setter="set_param_y" getter="get_param_y" default="0.01">
			The dampening value for the linear spring characteristic at the Y axis. This affects how much the linear spring joint oscillates before reaching its equilibrium point. The higher the value the less oscillation. Please note that high damping values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</member>
		<member name="linear_spring_y/enabled" type="bool" setter="set_flag_y" getter="get_flag_y" default="false">
			If [code]true[/code], the linear spring property on the Y axis is enabled.
		</member>
		<member name="linear_spring_y/equilibrium_point" type="float" setter="set_param_y" getter="get_param_y" default="0.0">
			The position the joint will try to maintain on the Y axis relative to [member Joint.nodes/node_a].
		</member>
		<member name="linear_spring_y/stiffness" type="float" setter="set_param_y" getter="get_param_y" default="0.01">
			The stiffness value for the linear spring characteristic on the Y axis. This affects how fast the linear spring joint will move to reach its set equilibrium point. The higher the value the more force is applied to maintain the set equilibrium point. Please note that high stiffness values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</member>
		<member name="linear_spring_z/damping" type="float" setter="set_param_z" getter="get_param_z" default="0.01">
			The dampening value for the linear spring characteristic at the Z axis. This affects how much the linear spring joint oscillates before reaching its equilibrium point. The higher the value the less oscillation. Please note that high damping values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</member>
		<member name="linear_spring_z/enabled" type="bool" setter="set_flag_z" getter="get_flag_z" default="false">
			If [code]true[/code], the linear spring property on the Z axis is enabled.
		</member>
		<member name="linear_spring_z/equilibrium_point" type="float" setter="set_param_z" getter="get_param_z" default="0.0">
			The position the joint will try to maintain on the Z axis relative to [member Joint.nodes/node_a].
		</member>
		<member name="linear_spring_z/stiffness" type="float" setter="set_param_z" getter="get_param_z" default="0.01">
			The stiffness value for the linear spring characteristic on the Z axis. This affects how fast the linear spring joint will move to reach its set equilibrium point. The higher the value the more force is applied to maintain the set equilibrium point. Please note that high stiffness values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</member>
	</members>
	<constants>
		<constant name="PARAM_LINEAR_LOWER_LIMIT" value="0" enum="Param">
			The minimum difference between the pivot points' axes.
		</constant>
		<constant name="PARAM_LINEAR_UPPER_LIMIT" value="1" enum="Param">
			The maximum difference between the pivot points' axes.
		</constant>
		<constant name="PARAM_LINEAR_LIMIT_SOFTNESS" value="2" enum="Param">
			A factor applied to the movement across the axes. The lower, the slower the movement.
		</constant>
		<constant name="PARAM_LINEAR_RESTITUTION" value="3" enum="Param">
			The amount of restitution on the axes' movement. The lower, the more momentum gets lost.
		</constant>
		<constant name="PARAM_LINEAR_DAMPING" value="4" enum="Param">
			The amount of damping that happens at the linear motion across the axes.
		</constant>
		<constant name="PARAM_LINEAR_MOTOR_TARGET_VELOCITY" value="5" enum="Param">
			The velocity the linear motor will try to reach.
		</constant>
		<constant name="PARAM_LINEAR_MOTOR_FORCE_LIMIT" value="6" enum="Param">
			The maximum force the linear motor will apply while trying to reach the velocity target.
		</constant>
		<constant name="PARAM_LINEAR_SPRING_STIFFNESS" value="7" enum="Param">
			The stiffness value for the linear spring characteristic on the axes. This affects how fast the linear spring joint will move to reach its set equilibrium point. The higher the value the more force is applied to maintain the set equilibrium point. Please note that high stiffness values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</constant>
		<constant name="PARAM_LINEAR_SPRING_DAMPING" value="8" enum="Param">
			The dampening value for the linear spring characteristic on the axes. This affects how much the linear spring joint oscillates before reaching its equilibrium point. The higher the value the less oscillation. Please note that high damping values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</constant>
		<constant name="PARAM_LINEAR_SPRING_EQUILIBRIUM_POINT" value="9" enum="Param">
			The position the joint will try to maintain on the axes relative to [member Joint.nodes/node_a].
		</constant>
		<constant name="PARAM_ANGULAR_LOWER_LIMIT" value="10" enum="Param">
			The minimum rotation in negative direction to break loose and rotate around the axes.
		</constant>
		<constant name="PARAM_ANGULAR_UPPER_LIMIT" value="11" enum="Param">
			The minimum rotation in positive direction to break loose and rotate around the axes.
		</constant>
		<constant name="PARAM_ANGULAR_LIMIT_SOFTNESS" value="12" enum="Param">
			The speed of all rotations across the axes.
		</constant>
		<constant name="PARAM_ANGULAR_DAMPING" value="13" enum="Param">
			The amount of rotational damping across the axes. The lower, the more dampening occurs.
		</constant>
		<constant name="PARAM_ANGULAR_RESTITUTION" value="14" enum="Param">
			The amount of rotational restitution across the axes. The lower, the more restitution occurs.
		</constant>
		<constant name="PARAM_ANGULAR_FORCE_LIMIT" value="15" enum="Param">
			The maximum amount of force that can occur, when rotating around the axes.
		</constant>
		<constant name="PARAM_ANGULAR_ERP" value="16" enum="Param">
			When rotating across the axes, this error tolerance factor defines how much the correction gets slowed down. The lower, the slower.
		</constant>
		<constant name="PARAM_ANGULAR_MOTOR_TARGET_VELOCITY" value="17" enum="Param">
			Target speed for the motor at the axes.
		</constant>
		<constant name="PARAM_ANGULAR_MOTOR_FORCE_LIMIT" value="18" enum="Param">
			Maximum acceleration for the motor at the axes.
		</constant>
		<constant name="PARAM_ANGULAR_SPRING_STIFFNESS" value="19" enum="Param">
			The stiffness value for the angular spring characteristic around the axes. This affects how fast the angular spring joint will rotate to reach its set equilibrium angle. The higher the value the more force is applied to maintain the set equilibrium angle. Please note that high stiffness values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</constant>
		<constant name="PARAM_ANGULAR_SPRING_DAMPING" value="20" enum="Param">
			The dampening value for the angular spring characteristic around the axes. This affects how much the angular spring joint oscillates before reaching its equilibrium angle. The higher the value the less oscillation. Please note that high damping values may adversely affect the joint arrangement when attached with "light" rigidbodies ([member RigidBody.mass] less than or equal to 1).
		</constant>
		<constant name="PARAM_ANGULAR_SPRING_EQUILIBRIUM_POINT" value="21" enum="Param">
			The angle in radians the joint will try to maintain around the axes relative to [member Joint.nodes/node_a].
		</constant>
		<constant name="PARAM_MAX" value="22" enum="Param">
			Represents the size of the [enum Param] enum.
		</constant>
		<constant name="FLAG_ENABLE_LINEAR_LIMIT" value="0" enum="Flag">
			If enabled, linear motion is possible within the given limits.
		</constant>
		<constant name="FLAG_ENABLE_ANGULAR_LIMIT" value="1" enum="Flag">
			If enabled, rotational motion is possible within the given limits.
		</constant>
		<constant name="FLAG_ENABLE_LINEAR_SPRING" value="3" enum="Flag">
			If enabled, these axes will take on linear spring characterisitics.
		</constant>
		<constant name="FLAG_ENABLE_ANGULAR_SPRING" value="2" enum="Flag">
			If enabled, these axes will take on angular spring characterisitics.
		</constant>
		<constant name="FLAG_ENABLE_MOTOR" value="4" enum="Flag">
			If enabled, there is a rotational motor across these axes.
		</constant>
		<constant name="FLAG_ENABLE_LINEAR_MOTOR" value="5" enum="Flag">
			If enabled, there is a linear motor across these axes.
		</constant>
		<constant name="FLAG_MAX" value="6" enum="Flag">
			Represents the size of the [enum Flag] enum.
		</constant>
	</constants>
</class>
