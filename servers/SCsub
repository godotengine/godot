#!/usr/bin/env python

Import("env")

env.servers_sources = []

env.add_source_files(env.servers_sources, "audio_server.cpp")
env.add_source_files(env.servers_sources, "camera_server.cpp")
env.add_source_files(env.servers_sources, "display_server.cpp")
env.add_source_files(env.servers_sources, "navigation_server_2d.cpp")
env.add_source_files(env.servers_sources, "navigation_server_3d.cpp")
env.add_source_files(env.servers_sources, "physics_server_2d.cpp")
env.add_source_files(env.servers_sources, "physics_server_2d_wrap_mt.cpp")
env.add_source_files(env.servers_sources, "register_server_types.cpp")
env.add_source_files(env.servers_sources, "rendering_server.cpp")
env.add_source_files(env.servers_sources, "text_server.cpp")

SConscript("audio/SCsub")
SConscript("camera/SCsub")
SConscript("debugger/SCsub")
SConscript("display/SCsub")
SConscript("extensions/SCsub")
SConscript("movie_writer/SCsub")
SConscript("navigation/SCsub")
SConscript("rendering/SCsub")
SConscript("text/SCsub")

SConscript("physics_2d/SCsub")

if not env["disable_3d"]:
    SConscript("physics_3d/SCsub")
    env.add_source_files(env.servers_sources, "physics_server_3d.cpp")
    env.add_source_files(env.servers_sources, "physics_server_3d_wrap_mt.cpp")
    SConscript("xr/SCsub")
    env.add_source_files(env.servers_sources, "xr_server.cpp")

lib = env.add_library("servers", env.servers_sources)

env.Prepend(LIBS=[lib])
