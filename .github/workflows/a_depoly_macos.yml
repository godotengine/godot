name: üçé macOS Build Workflow

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: "Version number for the build"
      platforms:
        required: true
        type: string
        description: "Platforms to build"
      godot_base_branch:
        required: true
        type: string
        description: "Base branch for Godot"
      engine_version:
        required: true
        type: string
        description: "Engine version"
      common_args:
        required: true
        type: string
        description: "Common build arguments"
      release_args:
        required: true
        type: string
        description: "Release build arguments"
      editor_args:
        required: true
        type: string
        description: "Editor build arguments"
      event_name:
        required: true
        type: string
        description: "Event name triggering the build"
      release_tag:
        required: false
        type: string
        description: "Release tag name"
    secrets:
      GH_TOKEN:
        required: true

env:
  SCONS_CACHE: "${{github.workspace}}/.scons-cache/"
  SCONS_CACHE_LIMIT: "10000"

jobs:
  macos-editor-build:
    name: üçé macOS ${{ matrix.arch }} Editor Build
    if: contains(inputs.platforms, 'macos') || contains(inputs.platforms, 'all')
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]
        include:
          - arch: x86_64
            artifact_suffix: x86_64
          - arch: arm64
            artifact_suffix: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Set up shared cache for macOS builds
      - name: Set up build cache
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/.scons-cache/
          # Do not use SHA in cache key to allow cache reuse across commits
          key: macos-editor-${{inputs.godot_base_branch}}-${{github.ref}}
          restore-keys: |
            macos-editor-${{inputs.godot_base_branch}}-
            macos-editor-

      - name: Setup Python and SCons
        uses: ./.github/actions/godot-deps

      # Build macOS Editor for specific architecture
      - name: Build macOS Editor (${{ matrix.arch }})
        uses: ./.github/actions/godot-build
        with:
          sconsflags: platform=macos target=editor arch=${{ matrix.arch }} ${{ inputs.common_args }} ${{ inputs.editor_args }}
          platform: macos
          target: editor

      - name: Compress macOS Editor Build
        run: |
          chmod +x bin/godot.macos.editor.${{ matrix.arch }}
          zip -j bin/editor-macos-${{ matrix.artifact_suffix }}.zip bin/godot.macos.editor.${{ matrix.arch }}

      - name: Upload macOS Editor Build Results
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.arch }}-editor-${{ inputs.version }}
          path: bin/editor-macos-${{ matrix.artifact_suffix }}.zip
          retention-days: 14

      - name: Publish to GitHub Release
        if: inputs.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: bin/editor-macos-${{ matrix.artifact_suffix }}.zip
          tag_name: ${{ inputs.release_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  macos-template-build:
    name: üçé macOS ${{ matrix.arch }} Template Build
    if: contains(inputs.platforms, 'macos') || contains(inputs.platforms, 'all')
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]
        include:
          - arch: x86_64
            artifact_suffix: x86_64
          - arch: arm64
            artifact_suffix: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Set up shared cache for macOS builds
      - name: Set up build cache
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/.scons-cache/
          # Do not use SHA in cache key to allow cache reuse across commits
          key: macos-template-bin-${{inputs.godot_base_branch}}-${{github.ref}}
          restore-keys: |
            macos-template-bin-${{inputs.godot_base_branch}}-
            macos-template-bin-

      - name: Setup Python and SCons
        uses: ./.github/actions/godot-deps

      # Build macOS Template for specific architecture
      - name: Build macOS Template Release (${{ matrix.arch }})
        uses: ./.github/actions/godot-build
        with:
          sconsflags: platform=macos target=template_release ${{ inputs.common_args }} ${{ inputs.release_args }} arch=${{ matrix.arch }}
          platform: macos
          target: template_release
          
      - name: Build macOS Template Debug (${{ matrix.arch }})
        uses: ./.github/actions/godot-build
        with:
          sconsflags: platform=macos target=template_debug ${{ inputs.common_args }} ${{ inputs.release_args }} arch=${{ matrix.arch }}
          platform: macos
          target: template_debug

      - name: Compress macOS Template Builds
        run: |
          chmod +x bin/godot.macos.template_debug.${{ matrix.arch }}
          chmod +x bin/godot.macos.template_release.${{ matrix.arch }}
          zip -j bin/macos-${{ matrix.artifact_suffix }}.zip bin/godot.macos.template_debug.${{ matrix.arch }} bin/godot.macos.template_release.${{ matrix.arch }}

      - name: Upload macOS Template Build Results
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.arch }}-template-${{ inputs.version }}
          path: bin/macos-${{ matrix.artifact_suffix }}.zip
          retention-days: 14

      - name: Publish to GitHub Release
        if: inputs.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: bin/macos-${{ matrix.artifact_suffix }}.zip
          tag_name: ${{ inputs.release_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  macos-template-app-build:
    name: üçé macOS Template App Build
    if: contains(inputs.platforms, 'macos') || contains(inputs.platforms, 'all')
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Set up shared cache for macOS builds
      - name: Set up build cache
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/.scons-cache/
          key: macos-template-${{inputs.godot_base_branch}}-${{github.ref}}
          restore-keys: |
            macos-template-${{inputs.godot_base_branch}}-
            macos-template-

      - name: Setup Python and SCons
        uses: ./.github/actions/godot-deps

      # Build x86_64 templates
      - name: Build macOS Template Release (x86_64)
        uses: ./.github/actions/godot-build
        with:
          sconsflags: platform=macos target=template_release arch=x86_64 ${{ inputs.common_args }} ${{ inputs.release_args }}
          platform: macos
          target: template_release

      - name: Build macOS Template Debug (x86_64)
        uses: ./.github/actions/godot-build
        with:
          sconsflags: platform=macos target=template_debug arch=x86_64 ${{ inputs.common_args }} ${{ inputs.release_args }}
          platform: macos
          target: template_debug

      # Build arm64 templates
      - name: Build macOS Template Release (arm64)
        uses: ./.github/actions/godot-build
        with:
          sconsflags: platform=macos target=template_release arch=arm64 ${{ inputs.common_args }} ${{ inputs.release_args }}
          platform: macos
          target: template_release

      - name: Build macOS Template Debug (arm64)
        uses: ./.github/actions/godot-build
        with:
          sconsflags: platform=macos target=template_debug arch=arm64 ${{ inputs.common_args }} ${{ inputs.release_args }}
          platform: macos
          target: template_debug

      # Create Universal Binaries
      - name: Create Universal Template Binaries
        run: |
          # Create universal binaries using lipo
          lipo -create bin/godot.macos.template_release.x86_64 bin/godot.macos.template_release.arm64 -output bin/godot.macos.template_release.universal
          lipo -create bin/godot.macos.template_debug.x86_64 bin/godot.macos.template_debug.arm64 -output bin/godot.macos.template_debug.universal
          
          # Create app bundle structure
          cp -r misc/dist/macos_template.app .
          mkdir -p macos_template.app/Contents/MacOS
          mkdir -p macos_template.app/Contents/Frameworks
          
          # Copy binaries to app bundle
          cp bin/godot.macos.template_release.universal macos_template.app/Contents/MacOS/godot_macos_release.universal
          cp bin/godot.macos.template_debug.universal macos_template.app/Contents/MacOS/godot_macos_debug.universal
          
          # Set executable permissions
          chmod +x macos_template.app/Contents/MacOS/godot_macos*
          
          # Create final zip
          zip -q -9 -r bin/macos.zip macos_template.app

      - name: Upload macOS Template Build Results
        uses: actions/upload-artifact@v4
        with:
          name: macos-template-${{ inputs.version }}
          path: bin/macos.zip
          retention-days: 14

      - name: Publish to GitHub Release
        if: inputs.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: bin/macos.zip
          tag_name: ${{ inputs.release_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
