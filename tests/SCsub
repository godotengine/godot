#!/usr/bin/env python
from misc.utility.scons_hints import *

Import("env")

env.tests_sources = []

env_tests = env.Clone()

# We must disable the THREAD_LOCAL entirely in doctest to prevent crashes on debugging
# Since we link with /MT thread_local is always expired when the header is used
# So the debugger crashes the engine and it causes weird errors
# Explained in https://github.com/onqtam/doctest/issues/401
if env_tests["platform"] == "windows":
    env_tests.Append(CPPDEFINES=[("DOCTEST_THREAD_LOCAL", "")])

if env["disable_exceptions"]:
    env_tests.Append(CPPDEFINES=["DOCTEST_CONFIG_NO_EXCEPTIONS_BUT_WITH_ALL_ASSERTS"])

env_tests.add_source_files(env.tests_sources, "*.cpp")

# Unit test source files.
# These are built into a separate library from the test_main.cpp code, in part
# for dependency reasons.  main/main.cpp depends on test_main, but not on individual
# unit tests.
env.unit_test_sources = []
env_tests.add_source_files(env.unit_test_sources, "scene/*.cpp")

# The unit test library needs to be linked using WHOLEARCHIVELIBS rather than LIBS so that
# all test files will be included in the final executable.  Each file contains constructor
# functions that need to run before main() to register the tests, but nothing else references
# symbols in these files to cause them to be included otherwise.
lib = env_tests.add_library("unit_tests", env.unit_test_sources)
env.Prepend(WHOLEARCHIVELIBS=lib)
