#!/usr/bin/env python
from misc.utility.scons_hints import *

from methods import print_error

Import("env")

env.drivers_sources = []
supported = env.get("supported", [])

# OS drivers
env.add_subdirectory("unix/SCsub")
env.add_subdirectory("windows/SCsub")

# Sounds drivers
env.add_subdirectory("alsa/SCsub")
if env["platform"] == "ios" or env["platform"] == "macos":
    env.add_subdirectory("coreaudio/SCsub")
env.add_subdirectory("pulseaudio/SCsub")
if env["platform"] == "windows":
    env.add_subdirectory("wasapi/SCsub")
    if not env.msvc:
        env.add_subdirectory("backtrace/SCsub")
if env["xaudio2"]:
    if "xaudio2" not in supported:
        print_error("Target platform '{}' does not support the XAudio2 audio driver".format(env["platform"]))
        Exit(255)
    env.add_subdirectory("xaudio2/SCsub")
# Shared Apple platform drivers
if env["platform"] in ["macos", "ios"]:
    env.add_subdirectory("apple/SCsub")
# Midi drivers
env.add_subdirectory("alsamidi/SCsub")
env.add_subdirectory("coremidi/SCsub")
env.add_subdirectory("winmidi/SCsub")

# Graphics drivers
if env["vulkan"]:
    env.add_subdirectory("vulkan/SCsub")
if env["d3d12"]:
    if "d3d12" not in supported:
        print_error("Target platform '{}' does not support the D3D12 rendering driver".format(env["platform"]))
        Exit(255)
    env.add_subdirectory("d3d12/SCsub")
if env["opengl3"]:
    env.add_subdirectory("gl_context/SCsub")
    env.add_subdirectory("gles3/SCsub")
    env.add_subdirectory("egl/SCsub")
if env["metal"]:
    if "metal" not in supported:
        print_error("Target platform '{}' does not support the Metal rendering driver".format(env["platform"]))
        Exit(255)
    env.add_subdirectory("metal/SCsub")

# Core dependencies
env.add_subdirectory("png/SCsub")

env.add_source_files(env.drivers_sources, "*.cpp")

lib = env.add_library("drivers", env.drivers_sources)
env.Prepend(LIBS=[lib])
